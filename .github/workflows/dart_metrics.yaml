name: Dart Code Metrics

env:
  DART_VERSION: 3.0.0
  folders: "lib, test"

on:
    pull_request:
      paths:
        - 'packages/**'
    push:
      branches:
        - master
        - develop

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
  check:
    name: dart-code-metrics
    runs-on: ubuntu-latest
    steps:
    - name: "Git Checkout"
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: dart-lang/setup-dart@v1
      with:
        sdk: ${{ env.DART_VERSION }}
    - name: "Install Tools"
      run: dart pub global activate melos
    - name: "Bootstrap Workspace"
      run: melos bootstrap

    - name: "Migrate Metrics"
      uses: dart-code-checker/dart-code-metrics-action@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        relative_path: 'packages/athena_migrate'
        folders: ${{ env.folders }}

    - name: "MySQL Metrics"
      uses: dart-code-checker/dart-code-metrics-action@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        relative_path: 'packages/athena_mysql'
        folders: ${{ env.folders }}

    - name: "Postgres Metrics"
      uses: dart-code-checker/dart-code-metrics-action@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        relative_path: 'packages/athena_postgres'
        folders: ${{ env.folders }}

    - name: "AthenaSQL Metrics"
      uses: dart-code-checker/dart-code-metrics-action@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        relative_path: 'packages/athena_sql'
        folders: ${{ env.folders }}

    - name: "Utils Metrics"
      uses: dart-code-checker/dart-code-metrics-action@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        relative_path: 'packages/athena_utils'
        folders: ${{ env.folders }}