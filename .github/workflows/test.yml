name: Dart CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env:
  DART_VERSION: 3.0.0


concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  format_lint:
    name: Check lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ env.DART_VERSION }}
      - name: Verify code formatting
        run: dart format --output none --set-exit-if-changed .

      - name: Activate Melos
        run: dart pub global activate melos
        
      - name: Install coverage tools
        run: dart pub global activate coverage

      - name: Install Dependencies
        run: melos bs
      - name: Analyze
        run: dart analyze .
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sdk: [stable, beta, dev]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.sdk }}
      - name: Activate Melos
        run: dart pub global activate melos
      - name: Install Dependencies
        run: melos bs
        working-directory: packages/athena_sql
      - name: Run tests
        run: dart test
        working-directory: packages/athena_sql
  test_postgres:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sdk: [stable, beta, dev]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.sdk }}

        # pre-pull the image so `usePostgresDocker` does not delay which may causes
        # tests to timeout
      - name: pull latest postgres image
        run: docker pull postgres:latest
      - name: Activate Melos
        run: dart pub global activate melos
      - name: Install Dependencies
        run: melos bs
        working-directory: packages/athena_postgres
      - name: Run tests
        run: dart test
        working-directory: packages/athena_postgres
  test_mysql:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sdk: [stable, beta, dev]
      fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ matrix.sdk }}
      - name: Activate Melos
        run: dart pub global activate melos
      - name: Install Dependencies
        run: melos bs
        working-directory: packages/athena_mysql
      - name: Run tests
        run: dart test
        working-directory: packages/athena_mysql
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{ env.DART_VERSION }}

      - name: Activate Melos
        run: dart pub global activate melos
        
      - name: Install coverage tools
        run: dart pub global activate coverage

      - name: Install Dependencies
        run: melos bs

      - name: pull latest postgres image
        run: docker pull postgres:latest
      - name: Test Coverage
        run:  melos run test:coverage
      - name: "Upload Coverage"
        uses: codecov/codecov-action@v3
        with:
          files: packages/*/coverage/lcov.info
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

