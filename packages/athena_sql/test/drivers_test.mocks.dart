// Mocks generated by Mockito 5.4.0 from annotations
// in athena_sql/test/drivers_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i2;

import 'package:athena_sql/src/builders/builders.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

import 'utils/driver.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFuture_0<T> extends _i1.SmartFake implements _i2.Future<T> {
  _FakeFuture_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAthenaQueryResponse_1 extends _i1.SmartFake
    implements _i3.AthenaQueryResponse {
  _FakeAthenaQueryResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [TestDatabaseDriver].
///
/// See the documentation for Mockito's code generation for more information.
class MockTestDatabaseDriver extends _i1.Mock
    implements _i4.TestDatabaseDriver {
  MockTestDatabaseDriver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  dynamic Function(String) get executable => (super.noSuchMethod(
        Invocation.getter(#executable),
        returnValue: (String __p0) => null,
      ) as dynamic Function(String));
  @override
  _i2.Future<int> execute(
    String? query, {
    Map<String, dynamic>? mapValues,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #execute,
          [query],
          {#mapValues: mapValues},
        ),
        returnValue: _i2.Future<int>.value(0),
      ) as _i2.Future<int>);
  @override
  _i2.Future<bool> tableExists(String? table) => (super.noSuchMethod(
        Invocation.method(
          #tableExists,
          [table],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);
  @override
  _i2.Future<void> open() => (super.noSuchMethod(
        Invocation.method(
          #open,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
  @override
  _i2.Future<T> transaction<T>(
          _i2.Future<T> Function(_i3.AthenaDatabaseDriver)? trx) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [trx],
        ),
        returnValue: _FakeFuture_0<T>(
          this,
          Invocation.method(
            #transaction,
            [trx],
          ),
        ),
      ) as _i2.Future<T>);
  @override
  _i2.Future<_i3.AthenaQueryResponse> query(
    String? queryString, {
    Map<String, dynamic>? mapValues,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [queryString],
          {#mapValues: mapValues},
        ),
        returnValue: _i2.Future<_i3.AthenaQueryResponse>.value(
            _FakeAthenaQueryResponse_1(
          this,
          Invocation.method(
            #query,
            [queryString],
            {#mapValues: mapValues},
          ),
        )),
      ) as _i2.Future<_i3.AthenaQueryResponse>);
}
